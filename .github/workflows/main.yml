name: main
on:
  workflow_dispatch:
    inputs:
      version:
        required: true
jobs:
  build_intel_app:
    runs-on: macos-12
    steps:
    - name: null
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 18
        java-package: jdk
    - name: null
      uses: robinraju/release-downloader@v1.7
      with:
        repository: mjgroth/deephys
        fileName: nn-deephys-intel-0-all.jar
        tag: ${{ github.event.inputs.version }}
    - name: mkdirs
      env: {}
      run: |-
        mkdir input
        mkdir temp
        mkdir output
        mkdir cer
    - name: decode base64 cert
      env:
        CERTS_P12_B64: ${{ secrets.CERTS_P12_B64 }}
      run: echo -n "$CERTS_P12_B64" | base64 --decode --output cer/Certificates.p12
    - name: write pem cert
      env:
        DEV_ID_APP_PEM: ${{ secrets.DEV_ID_APP_PEM }}
      run: echo -n "$DEV_ID_APP_PEM" > cer/dev_id_app.pem
    - name: security create
      env: {}
      run: security -v create-keychain -p "${{ secrets.CER }}" build.keychain
    - name: security default
      env: {}
      run: security -v default-keychain -s build.keychain
    - name: security unlock
      env: {}
      run: security -v unlock-keychain -p "${{ secrets.CER }}" build.keychain
    - name: security list-keychains
      env: {}
      run: security -v list-keychains
      continue-on-error: true
    - name: security show-keychain-info
      env: {}
      run: security -v show-keychain-info build.keychain
      continue-on-error: true
    - name: security dump-trust-settings
      env: {}
      run: security -v dump-trust-settings
      continue-on-error: true
    - name: security requirement-evaluate
      env: {}
      run: security -v requirement-evaluate cer/dev_id_app.pem
      continue-on-error: true
    - name: security import
      env: {}
      run: security -v import cer/Certificates.p12 -k build.keychain -P "${{ secrets.CER
        }}" -T /usr/bin/codesign
    - name: security partition list
      env: {}
      run: 'security -v set-key-partition-list -S apple-tool:,apple:,codesign: -s
        -k "${{ secrets.CER }}" build.keychain'
    - name: prepare files for jPackage
      env: {}
      run: |-
        echo ls:
        ls -al
        echo "ls input:"
        ls -al input
        mv nn-deephys-intel-0-all.jar input
        curl -LJ0 https://github.com/mjgroth/deephys/blob/master/src/main/resources/logo.icns -o logo.icns
    - name: jPackage
      env: {}
      run: jpackage --type app-image --verbose --name deephys --app-version "${{ github.event.inputs.version
        }}" --main-jar nn-deephys-intel-0-all.jar --java-options -Dprism.maxvram=2G
        --java-options -Xmx6144m --java-options -XX:-OmitStackTraceInFastThrow --dest
        output --icon logo.icns --input input --temp temp --mac-package-identifier
        lab.sinha.deephy --mac-package-signing-prefix lab.sinha.deephy --mac-sign
    - name: notarize 1
      env: {}
      run: mkdir /Users/runner/work/deephys/deephys/output/jar
    - name: notarize 2
      env: {}
      run: jar xf /Users/runner/work/deephys/deephys/output/deephys.app/Contents/app/nn-deephys-intel-0-all.jar
      working-directory: /Users/runner/work/deephys/deephys/output/jar
    - name: notarize 3
      env: {}
      run: pwd
    - name: notarize 4
      env: {}
      run: ls
    - name: notarize 5
      env: {}
      run: ls /Users/runner/work/deephys/deephys/output
    - name: notarize 6
      env: {}
      run: ls /Users/runner/work/deephys/deephys/output/jar
    - name: notarize 7
      env: {}
      run: ls /Users/runner/work/deephys/deephys/output/jar/com
    - name: notarize 8
      env: {}
      run: ls /Users/runner/work/deephys/deephys/output/jar/com/sun
    - name: notarize 9
      env: {}
      run: ls /Users/runner/work/deephys/deephys/output/jar/com/sun/jna
    - name: notarize 10
      env: {}
      run: ls /Users/runner/work/deephys/deephys/output/jar/com/sun/jna/darwin-aarch64
    - name: notarize 11
      env: {}
      run: 'codesign --timestamp --options runtime --force -s "Developer ID Application:
        Matthew Groth (4GAZMDTC2M)" --prefix lab.sinha.deephy -vvvv --entitlements
        /Users/runner/work/deephys/deephys/temp/config/deephys.entitlements /Users/runner/work/deephys/deephys/output/jar/com/sun/jna/darwin-aarch64/libjnidispatch.jnilib'
    - name: notarize 12
      env: {}
      run: 'codesign --timestamp --options runtime --force -s "Developer ID Application:
        Matthew Groth (4GAZMDTC2M)" --prefix lab.sinha.deephy -vvvv --entitlements
        /Users/runner/work/deephys/deephys/temp/config/deephys.entitlements /Users/runner/work/deephys/deephys/output/jar/com/sun/jna/darwin-x86-64/libjnidispatch.jnilib'
    - name: notarize 13
      env: {}
      run: rm -rf /Users/runner/work/deephys/deephys/output/deephys.app/Contents/app/nn-deephys-intel-0-all.jar
    - name: notarize 14
      env: {}
      run: bash -c "jar cf /Users/runner/work/deephys/deephys/output/deephys.app/Contents/app/nn-deephys-intel-0-all.jar
        *"
      working-directory: /Users/runner/work/deephys/deephys/output/jar
    - name: notarize 15
      env: {}
      run: 'codesign --timestamp --options runtime --force -s "Developer ID Application:
        Matthew Groth (4GAZMDTC2M)" --prefix lab.sinha.deephy -vvvv --entitlements
        /Users/runner/work/deephys/deephys/temp/config/deephys.entitlements /Users/runner/work/deephys/deephys/output/deephys.app/Contents/MacOS/deephys'
    - name: notarize 16
      env: {}
      run: ditto -c -k --keepParent /Users/runner/work/deephys/deephys/output/deephys.app
        /Users/runner/work/deephys/deephys/output/deephys-mac-intel.zip
    - name: notarize 17
      env: {}
      run: xcrun notarytool store-credentials matthewgroth --apple-id mgroth49@gmail.com
        --password "${{ secrets.NOTARYTOOL2 }}" --team-id 4GAZMDTC2M --validate -v
    - name: notarize 18
      env: {}
      run: bash -c "xcrun notarytool submit /Users/runner/work/deephys/deephys/output/deephys-mac-intel.zip
        --keychain-profile matthewgroth --wait -f json > /Users/runner/work/deephys/deephys/temp/notary_submit_result.json"
    - name: notarize 19
      env: {}
      run: cat /Users/runner/work/deephys/deephys/temp/notary_submit_result.json
    - name: notarize 20
      env: {}
      run: bash -c "jq -r '.id' /Users/runner/work/deephys/deephys/temp/notary_submit_result.json
        > /Users/runner/work/deephys/deephys/temp/notary_id.txt"
    - name: notarize 21
      env: {}
      run: cat /Users/runner/work/deephys/deephys/temp/notary_id.txt
    - name: notarize 22
      env: {}
      run: bash -c "xcrun notarytool log $(cat /Users/runner/work/deephys/deephys/temp/notary_id.txt)
        --keychain-profile matthewgroth"
    - name: notarize 23
      env: {}
      run: xcrun stapler staple /Users/runner/work/deephys/deephys/output/deephys.app
    - name: notarize 24
      env: {}
      run: ditto -c -k --keepParent /Users/runner/work/deephys/deephys/output/deephys.app
        /Users/runner/work/deephys/deephys/output/deephys-mac-intel.zip
    - name: notarize 25
      env: {}
      run: codesign -dv --verbose=4 /Users/runner/work/deephys/deephys/output/deephys.app
    - name: notarize 26
      env: {}
      run: spctl -a -t open --context context:primary-signature -v /Users/runner/work/deephys/deephys/output/deephys.app
    - name: null
      uses: svenstaro/upload-release-action@v2
      with:
        file: output/deephys-mac-intel.zip
        tag: ${{ github.event.inputs.version }}
        overwrite: true
  build_linux_app:
    runs-on: ubuntu-22.04
    steps:
    - name: null
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 18
        java-package: jdk
    - name: null
      uses: robinraju/release-downloader@v1.7
      with:
        repository: mjgroth/deephys
        fileName: nn-deephys-linux-0-all.jar
        tag: ${{ github.event.inputs.version }}
    - name: mkdirs
      env: {}
      run: |-
        mkdir input
        mkdir temp
        mkdir output
        mkdir cer
    - name: prepare files for jPackage
      env: {}
      run: |-
        echo ls:
        ls -al
        echo "ls input:"
        ls -al input
        mv nn-deephys-linux-0-all.jar input
        curl -LJ0 https://github.com/mjgroth/deephys/blob/master/src/main/resources/logo_64.png -o logo_64.png
    - name: jPackage
      env: {}
      run: jpackage --type app-image --verbose --name deephys --app-version "${{ github.event.inputs.version
        }}" --main-jar nn-deephys-linux-0-all.jar --java-options -Dprism.maxvram=2G
        --java-options -Xmx6144m --java-options -XX:-OmitStackTraceInFastThrow --dest
        output --icon logo_64.png --input input --temp temp
    - name: compress
      env: {}
      run: |-
        cd output
        zip -r deephys.linux_x86_64.zip deephys
        cd ..
        echo "ls output:"
        ls -al output
        echo "ls output/deephys:"
        ls -al output/deephys
    - name: null
      uses: svenstaro/upload-release-action@v2
      with:
        file: output/deephys.linux_x86_64.zip
        tag: ${{ github.event.inputs.version }}
        overwrite: true
  build_windows_app:
    runs-on: windows-2022
    steps:
    - name: null
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 18
        java-package: jdk
    - name: null
      uses: robinraju/release-downloader@v1.7
      with:
        repository: mjgroth/deephys
        fileName: nn-deephys-windows-0-all.jar
        tag: ${{ github.event.inputs.version }}
    - name: mkdirs
      env: {}
      run: |-
        mkdir input
        mkdir temp
        mkdir output
        mkdir cer
    - name: prepare files for jPackage
      env: {}
      run: |-
        echo ls:
        ls
        echo "ls input:"
        ls input
        mv nn-deephys-windows-0-all.jar input
        curl -LJ0 https://github.com/mjgroth/deephys/blob/master/src/main/resources/logo.ico -o logo.ico
    - name: jPackage
      env: {}
      run: jpackage --type app-image --verbose --name deephys --app-version "${{ github.event.inputs.version
        }}" --main-jar nn-deephys-windows-0-all.jar --java-options "-Dprism.maxvram=2G"
        --java-options -Xmx6144m --java-options -XX:-OmitStackTraceInFastThrow --dest
        output --icon logo.ico --input input --temp temp
    - name: compress
      env: {}
      run: |-
        cd output
        Compress-Archive deephys deephys.windows.zip
        cd ..
        echo "ls output:"
        ls output
        echo "ls output/deephys:"
        ls output/deephys
    - name: null
      uses: svenstaro/upload-release-action@v2
      with:
        file: output/deephys.windows.zip
        tag: ${{ github.event.inputs.version }}
        overwrite: true