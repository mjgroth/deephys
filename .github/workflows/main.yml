on:
  workflow_dispatch: {}
  release:
    types:
    - published
jobs:
  build_intel_app:
    runs-on: macos-12
    steps:
    - !<matt.mbuild.admin.ghwf.model.action.GHUseAction>
      uses: actions/setup-java@v3
      with:
        distribution: corretto
        java-version: 18
        java-package: jdk
    - !<matt.mbuild.admin.ghwf.model.action.GHUseAction>
      uses: robinraju/release-downloader@v1.7
      with:
        repository: mjgroth/deephys
        latest: true
        fileName: nn-deephys-intel-0-all.jar
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: |-
        mkdir input
        mkdir temp
        mkdir output
        mkdir cer
      name: mkdirs
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env:
        CERTS_P12_B64: ${{ secrets.CERTS_P12_B64 }}
      run: echo -n $CERTS_P12_B64 | base64 --decode --output cer/Certificates.p12
      name: decode base64 cert
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env:
        DEV_ID_APP_PEM: ${{ secrets.DEV_ID_APP_PEM }}
      run: echo -n $CERTS_P12_B64 > cer/dev_id_app.pem
      name: write pem cert
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: security -v create-keychain -p ${{ secrets.CER }} build.keychain
      name: security create
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: security -v default-keychain -s build.keychain
      name: security default
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: security -v unlock-keychain -p ${{ secrets.CER }} build.keychain
      name: security unlock
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: security -v list-keychains
      name: security list-keychains
      continueOnError: true
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: security -v show-keychain-info build.keychain
      name: security show-keychain-info
      continueOnError: true
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: security -v dump-trust-settings
      name: security dump-trust-settings
      continueOnError: true
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: security -v requirement-evaluate cer/dev_id_app.pem
      name: security requirement-evaluate
      continueOnError: true
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: certtool i cer/dev_id_app.pem v
      name: security import
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: 'security -v set-key-partition-list apple-tool:,apple:,codesign: -s -k
        ${{ secrets.CER }} build.keychain'
      name: security partition list
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: |-
        echo ls:
        ls -al
        echo ls input:
        ls -al input
        mv nn-deephys-intel-0-all.jar input
        curl -LJ0 https://github.com/mjgroth/deephys/blob/master/src/main/resources/logo.icns -o logo.icns
      name: prepare files for jPackage
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: jpackage --type app-image --verbose --name deephys --app-version 1.25.1
        --main-jar nn-deephys-intel-0-all.jar --java-options "-Dprism.maxvram=2G"
        --java-options -Xmx6144m --java-options -XX:-OmitStackTraceInFastThrow --dest
        output --icon logo.icns --input input --temp temp --mac-package-identifier
        lab.sinha.deephy --mac-package-signing-prefix lab.sinha.deephy --mac-sign
      name: jPackage
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: |-
        cd output
        zip -r deephys-mac-intel.zip deephys.app
        cd ..
        echo ls output:
        ls -al output
        echo ls output/deephys.app:
        ls -al output/deephys.app
      name: compress
    - !<matt.mbuild.admin.ghwf.model.action.GHUseAction>
      uses: svenstaro/upload-release-action@v2
      with:
        file: output/deephys-mac-intel.zip
        tag: 1.25.1
        overwrite: true
  build_linux_app:
    runs-on: ubuntu-22.04
    steps:
    - !<matt.mbuild.admin.ghwf.model.action.GHUseAction>
      uses: actions/setup-java@v3
      with:
        distribution: corretto
        java-version: 18
        java-package: jdk
    - !<matt.mbuild.admin.ghwf.model.action.GHUseAction>
      uses: robinraju/release-downloader@v1.7
      with:
        repository: mjgroth/deephys
        latest: true
        fileName: nn-deephys-linux-0-all.jar
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: |-
        mkdir input
        mkdir temp
        mkdir output
        mkdir cer
      name: mkdirs
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: |-
        echo ls:
        ls -al
        echo ls input:
        ls -al input
        mv nn-deephys-linux-0-all.jar input
        curl -LJ0 https://github.com/mjgroth/deephys/blob/master/src/main/resources/logo_64.png -o logo_64.png
      name: prepare files for jPackage
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: jpackage --type app-image --verbose --name deephys --app-version 1.25.1
        --main-jar nn-deephys-linux-0-all.jar --java-options "-Dprism.maxvram=2G"
        --java-options -Xmx6144m --java-options -XX:-OmitStackTraceInFastThrow --dest
        output --icon logo_64.png --input input --temp temp
      name: jPackage
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: |-
        cd output
        zip -r deephys.linux_x86_64.zip deephys
        cd ..
        echo ls output:
        ls -al output
        echo ls output/deephys:
        ls -al output/deephys
      name: compress
    - !<matt.mbuild.admin.ghwf.model.action.GHUseAction>
      uses: svenstaro/upload-release-action@v2
      with:
        file: output/deephys.linux_x86_64.zip
        tag: 1.25.1
        overwrite: true
  build_windows_app:
    runs-on: windows-2022
    steps:
    - !<matt.mbuild.admin.ghwf.model.action.GHUseAction>
      uses: actions/setup-java@v3
      with:
        distribution: corretto
        java-version: 18
        java-package: jdk
    - !<matt.mbuild.admin.ghwf.model.action.GHUseAction>
      uses: robinraju/release-downloader@v1.7
      with:
        repository: mjgroth/deephys
        latest: true
        fileName: nn-deephys-windows-0-all.jar
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: |-
        mkdir input
        mkdir temp
        mkdir output
        mkdir cer
      name: mkdirs
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: |-
        echo ls:
        ls
        echo ls input:
        ls input
        mv nn-deephys-windows-0-all.jar input
        curl -LJ0 https://github.com/mjgroth/deephys/blob/master/src/main/resources/logo.ico -o logo.ico
      name: prepare files for jPackage
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: jpackage --type app-image --verbose --name deephys --app-version 1.25.1
        --main-jar nn-deephys-windows-0-all.jar --java-options "-Dprism.maxvram=2G"
        --java-options -Xmx6144m --java-options -XX:-OmitStackTraceInFastThrow --dest
        output --icon logo.ico --input input --temp temp
      name: jPackage
    - !<matt.mbuild.admin.ghwf.model.action.GHRunAction>
      env: {}
      run: |-
        cd output
        Compress-Archive deephys deephys.windows.zip
        cd ..
        echo ls output:
        ls output
        echo ls output/deephys:
        ls output/deephys
      name: compress
    - !<matt.mbuild.admin.ghwf.model.action.GHUseAction>
      uses: svenstaro/upload-release-action@v2
      with:
        file: output/deephys.windows.zip
        tag: 1.25.1
        overwrite: true